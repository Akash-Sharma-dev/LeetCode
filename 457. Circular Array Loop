class Solution {
public:
    bool circularArrayLoop(vector<int>& nums) {
        int slow, fast, next;
        int n = nums.size();
        bool sign;
        vector<int> visited(n, 0);

        for (int i = 0; i < n; i++) {
            if (visited[i]) {
                continue;
            }

            slow = i;
            fast = i;
            sign = nums[i] < 0;

            while (true) {
                visited[slow] = 1;
                visited[fast] = 1;

                slow = (slow + nums[slow]) % n;
                next = (fast + nums[fast]) % n;

                if (slow < 0) {
                    slow = n + slow;
                }
                if (next < 0) {
                    next = n + next;
                }

                fast = (next + nums[next]) % n;
                if (fast < 0) {
                    fast = n + fast;
                }

                if (next == fast) {
                    break;
                }

                if ((nums[slow] < 0) != sign || (nums[fast] < 0) != sign || (nums[next] < 0) != sign) {
                    break;
                }

                if (slow == fast) {
                    return true;
                }
            }
        }

        return false;
    }
};
